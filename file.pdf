{"{\\rtf1\\ansi\\ansicpg1252\\cocoartf1561\\cocoasubrtf600\n{\\fonttbl\\f0\\fnil\\fcharset0 Menlo-Regular;}\n{\\colortbl;\\red255\\green255\\blue255;\\red0\\green0\\blue0;\\red255\\green255\\blue255;}\n{\\*\\expandedcolortbl;;\\csgenericrgb\\c0\\c0\\c0;\\csgenericrgb\\c100000\\c100000\\c100000;}\n\\margl1440\\margr1440\\vieww12780\\viewh15620\\viewkind0\n\\deftab593\n\\pard\\tx593\\pardeftab593\\pardirnatural\\partightenfactor0\n\n\\f0\\fs24 \\cf2 \\cb3 function onPostFetch(request, response, modules) \\{\\\n  // assign response body to an array\\\n  var bodyArray ":" response.body;\\\n  var configDict;\\\n  var globalMaintenanceType;\\\n  var query = request.params.query;\\\n  var queryJSON = JSON.parse(query);\\\n  var appStoreVersion = [\\{\\\n    \"iOS\": \"18.11\"\\\n  \\}, \\{\\\n    \"android\": \"18.11\"\\\n  \\}];\\\n  \\\n  var appStoreUrls = [\\{\\\n    \"iOS\": \"http://itunes.apple.com/us/app/ifarmers/id373431224\"\\\n  \\}, \\{\\\n    \"android\": \"https://play.google.com/store/apps/details?id=com.farmers.ifarmers","hl":"en\"\\\n  \\}];\\\n  // ---- maintenance ----\\\n  // check if array.count > 0\\\n  if (bodyArray.length === 0) \\{\\\n    configDict = defaultResponse(request.params); //load default settings "," apply default to bodyArray\\\n  \\} else \\{\\\n    configDict ":" bodyArray[0];\\\n  \\}\\\n  //grab maintenanceType\\\n  //Have created a collection to store all the Global maintenanceType and offline billing\\\n  //Checking if the collection have appVersion and osType matching our request\\\n  modules.collectionAccess.collection('GlobalConfig').find(\\{\\}, function(err, docs) \\{\\\n    if (err) \\{\\\n      modules.logger.info('----------------------------------------------------2'   err);\\\n      response.continue();\\\n    \\}\\\n    if (docs "," docs":[" docs[0];\\\n    \\}\\\n    globalMaintenanceType = doc.maintenanceType;\\\n    configDict.maintenanceType = doc.maintenanceType;\\\n    configDict.isBillingAvailable = doc.isBillingAvailable;\\\n    modules.logger.info(\"------------------------------\"   globalMaintenanceType);\\\n    maintenanceType = globalMaintenanceType;\\\n    var maintenance;\\\n    switch (maintenanceType) \\{\\\n      case \"none\":\\\n        break;\\\n      case \"test_full\":\\\n        maintenance = \\{\\\n          \"title\": \"Sorry!\",\\\n          \"message\": \"This is a test \\\\n this is the second line\",\\\n          \"footer\": \"1-888-123-4567\"\\\n        \\};\\\n        break;\\\n      case \"test_no_header\":\\\n        maintenance = \\{\\\n          \"title\": \"\",\\\n          \"message\": \"This is a test \\\\n this is the second line\",\\\n          \"footer\": \"1-888-123-4567\"\\\n        \\};\\\n        break;\\\n      case \"test_no_message\":\\\n        maintenance = \\{\\\n          \"title\": \"Sorry!\",\\\n          \"footer\": \"1-888-123-4567\"\\\n        \\};\\\n        break;\\\n      case \"test_no_footer\":\\\n        maintenance = \\{\\\n          \"title\": \"Sorry!\",\\\n          \"message\": \"This is a test \\\\n this is the second line\"\\\n        \\};\\\n        break;\\\n      case \"daytime_outage\":\\\n        maintenance = \\{\\\n          \"title\": \"\",\\\n          \"message\": \"We are experiencing technical difficulties and are working to restore service.\\\\n If you need to reach us, contact your Farmers agent or call\",\\\n          \"footer\": \"1-800-511-0879\"\\\n        \\};\\\n        break;\\\n      case \"evening_outage\":\\\n        maintenance = \\{\\\n          \"title\": \"\",\\\n          \"message\": \"We are experiencing technical difficulties and are working to restore service.\\\\n If you need to reach us, contact your Farmers agent or call\",\\\n          \"footer\": \"1-888-327-6335\"\\\n        \\};\\\n        break;\\\n      case \"daytime_maintenance\":\\\n        maintenance = \\{\\\n          \"title\": \"\",\\\n          \"message\": \"Our mobile app is currently unavailable due to scheduled system maintenance. If you need to reach us, contact your Farmers agent or call\",\\\n          \"footer\": \"1-800-511-0879\"\\\n        \\};\\\n        break;\\\n      case \"evening_maintenance\":\\\n        maintenance = \\{\\\n          \"title\": \"\",\\\n          \"message\": \"Our mobile app is currently unavailable due to scheduled system maintenance. If you need to reach us, contact your Farmers agent or call\",\\\n          \"footer\": \"1-888-327-6335\"\\\n        \\};\\\n        break;\\\n    \\}\\\n    // override msg in body\\\n    if (maintenance) \\{\\\n      configDict.maintenance = maintenance;\\\n    \\}\\\n    configDict.holidayHour = [\"Thanksgiving Day: Closed\",\"Day After Thanksgiving: 7am-8pm CST\",\"Christmas Eve: 8am-5pm CST\",\"Christmas Eve: Closed (FL Only)\",\"Christmas Day: Closed\",\"New Year's Day: Closed\"];\\\n    // ---- Claims ----\\\n    var isClaimsAvailable = configDict.isClaimsAvailable;\\\n    if (isClaimsAvailable) \\{\\\n      var claims = \\{\\\n        \"reportClaimURL\": \"https://www.farmers.com/eFNOL/eFNOL_Login?SO=01\",\\\n        \"viewClaimsStatusURL\": \"https://www.farmers.com/eFNOL/claimsstatusportal_login#/prelogin?SO=01\"\\\n      \\};\\\n      configDict.claims = claims;\\\n    \\}\\\n    configDict.isClaimsAvailable = (isClaimsAvailable === 'true');\\\n    var appUpdatePolicy = '';\\\n    if (checkOptional(queryJSON.appVersion, queryJSON.osType)) \\{\\\n      appUpdatePolicy = 'OPTIONAL';\\\n    \\} else if (checkNone(queryJSON.appVersion, queryJSON.osType)) \\{\\\n      appUpdatePolicy = 'NONE';\\\n    \\} else \\{\\\n      appUpdatePolicy = 'MANDATORY';\\\n    \\}\\\n    configDict.appUpdatePolicy = appUpdatePolicy;\\\n    configDict.appStoreUrl = fetchAppStoreURL(appStoreUrls, queryJSON.osType);\\\n    configDict.isClassicFeedbackUI = false;\\\n    configDict.appStoreAppVersion = fetchAppStoreURL(appStoreVersion, queryJSON.osType);\\\n    response.body = configDict;\\\n    modules.logger.info(\" 5. - Response : \"   JSON.stringify(response));\\\n    response.complete(200);\\\n  \\});\\\n\\}\\\n\\\nfunction defaultResponse(params) \\{\\\n  var res = \\{\\\n    \"maintenanceType\": \"none\",\\\n    \"appVersion\": \"default\",\\\n    \"osType\": \"default\",\\\n    \"isClaimsAvailable\": true,\\\n    \"isHonkAvailable\": true,\\\n    \"isBillingAvailable\": true,\\\n    \"holidayHour\": [\"Thanksgiving Day: Closed\",\"Day After Thanksgiving: 7am-8pm CST\",\"Christmas Eve: 8am-5pm CST\",\"Christmas Eve: Closed (FL Only)\",\"Christmas Day: Closed\",\"New Year's Day: Closed\"]\\\n  \\};\\\n  var query = params.query;\\\n  var queryJSON = JSON.parse(query);\\\n  if (queryJSON.maintenanceType) \\{\\\n    res.maintenanceType = queryJSON.maintenanceType;\\\n  \\}\\\n  if (queryJSON.appVersion) \\{\\\n    res.appVersion = queryJSON.appVersion;\\\n  \\}\\\n  if (queryJSON.osType) \\{\\\n    res.osType = queryJSON.osType;\\\n  \\}\\\n  modules.logger.info(\"------------------------------App Configuration post service: after\"   JSON.stringify(res));\\\n  return res;\\\n\\}\\\n\\\nfunction fetchAppStoreURL(appStoreUrls, osType) \\{\\\n  if (osType.toLowerCase().indexOf('ios') >= 0) \\{\\\n    return appStoreUrls[0].iOS;\\\n  \\}\\\n  if (osType.toLowerCase().indexOf('android') >= 0) \\{\\\n    return appStoreUrls[1].android;\\\n  \\}\\\n\\}\\\n\\\nfunction checkNone(appVersion, osType) \\{\\\n  var iOSLatestVersions = [\"18.9\",\"18.10\",\"18.10.1\",\"18.11\",\"18.12\",\"19.01\"];\\\n  var androidLatestVersions = [\"18.9\",\"18.10\",\"18.11\",\"18.12\",\"19.01\"];\\\n  var isNone = false;\\\n  if (osType.toLowerCase().indexOf('ios') >= 0) \\{\\\n    for (var iOSVersion in iOSLatestVersions) \\{\\\n      if (iOSLatestVersions[iOSVersion].toLowerCase() === appVersion.toLowerCase()) \\{\\\n        isNone = true;\\\n        break;\\\n      \\}\\\n    \\}\\\n  \\} else if (osType.toLowerCase().indexOf('android') >= 0) \\{\\\n    for (var androidVersion in androidLatestVersions) \\{\\\n      if (androidLatestVersions[androidVersion].toLowerCase() === appVersion.toLowerCase()) \\{\\\n        isNone = true;\\\n        break;\\\n      \\}\\\n    \\}\\\n  \\}\\\n  return isNone;\\\n\\}\\\n\\\nfunction checkOptional(appVersion, osType) \\{\\\n  var iOSValidVersions = [];\\\n  var androidValidVersions = [];\\\n  var isOptional = false;\\\n  if (osType.toLowerCase().indexOf('ios') >= 0) \\{\\\n    for (var iOSVersion in iOSValidVersions) \\{\\\n      if (iOSValidVersions[iOSVersion].toLowerCase() === appVersion.toLowerCase()) \\{\\\n        isOptional = true;\\\n        break;\\\n      \\}\\\n    \\}\\\n  \\} else if (osType.toLowerCase().indexOf('android') >= 0) \\{\\\n    for (var androidVersion in androidValidVersions) \\{\\\n      if (androidValidVersions[androidVersion].toLowerCase() === appVersion.toLowerCase()) \\{\\\n        isOptional = true;\\\n        break;\\\n      \\}\\\n    \\}\\\n  \\}\\\n  return isOptional;\\\n\\}}"]}{"{\\rtf1\\ansi\\ansicpg1252\\cocoartf1561\\cocoasubrtf600\n{\\fonttbl\\f0\\fnil\\fcharset0 Menlo-Regular;}\n{\\colortbl;\\red255\\green255\\blue255;\\red0\\green0\\blue0;\\red255\\green255\\blue255;}\n{\\*\\expandedcolortbl;;\\csgenericrgb\\c0\\c0\\c0;\\csgenericrgb\\c100000\\c100000\\c100000;}\n\\margl1440\\margr1440\\vieww12780\\viewh15620\\viewkind0\n\\deftab593\n\\pard\\tx593\\pardeftab593\\pardirnatural\\partightenfactor0\n\n\\f0\\fs24 \\cf2 \\cb3 function onPostFetch(request, response, modules) \\{\\\n  // assign response body to an array\\\n  var bodyArray ":" response.body;\\\n  var configDict;\\\n  var globalMaintenanceType;\\\n  var query = request.params.query;\\\n  var queryJSON = JSON.parse(query);\\\n  var appStoreVersion = [\\{\\\n    \"iOS\": \"18.11\"\\\n  \\}, \\{\\\n    \"android\": \"18.11\"\\\n  \\}];\\\n  \\\n  var appStoreUrls = [\\{\\\n    \"iOS\": \"http://itunes.apple.com/us/app/ifarmers/id373431224\"\\\n  \\}, \\{\\\n    \"android\": \"https://play.google.com/store/apps/details?id=com.farmers.ifarmers","hl":"en\"\\\n  \\}];\\\n  // ---- maintenance ----\\\n  // check if array.count > 0\\\n  if (bodyArray.length === 0) \\{\\\n    configDict = defaultResponse(request.params); //load default settings "," apply default to bodyArray\\\n  \\} else \\{\\\n    configDict ":" bodyArray[0];\\\n  \\}\\\n  //grab maintenanceType\\\n  //Have created a collection to store all the Global maintenanceType and offline billing\\\n  //Checking if the collection have appVersion and osType matching our request\\\n  modules.collectionAccess.collection('GlobalConfig').find(\\{\\}, function(err, docs) \\{\\\n    if (err) \\{\\\n      modules.logger.info('----------------------------------------------------2'   err);\\\n      response.continue();\\\n    \\}\\\n    if (docs "," docs":[" docs[0];\\\n    \\}\\\n    globalMaintenanceType = doc.maintenanceType;\\\n    configDict.maintenanceType = doc.maintenanceType;\\\n    configDict.isBillingAvailable = doc.isBillingAvailable;\\\n    modules.logger.info(\"------------------------------\"   globalMaintenanceType);\\\n    maintenanceType = globalMaintenanceType;\\\n    var maintenance;\\\n    switch (maintenanceType) \\{\\\n      case \"none\":\\\n        break;\\\n      case \"test_full\":\\\n        maintenance = \\{\\\n          \"title\": \"Sorry!\",\\\n          \"message\": \"This is a test \\\\n this is the second line\",\\\n          \"footer\": \"1-888-123-4567\"\\\n        \\};\\\n        break;\\\n      case \"test_no_header\":\\\n        maintenance = \\{\\\n          \"title\": \"\",\\\n          \"message\": \"This is a test \\\\n this is the second line\",\\\n          \"footer\": \"1-888-123-4567\"\\\n        \\};\\\n        break;\\\n      case \"test_no_message\":\\\n        maintenance = \\{\\\n          \"title\": \"Sorry!\",\\\n          \"footer\": \"1-888-123-4567\"\\\n        \\};\\\n        break;\\\n      case \"test_no_footer\":\\\n        maintenance = \\{\\\n          \"title\": \"Sorry!\",\\\n          \"message\": \"This is a test \\\\n this is the second line\"\\\n        \\};\\\n        break;\\\n      case \"daytime_outage\":\\\n        maintenance = \\{\\\n          \"title\": \"\",\\\n          \"message\": \"We are experiencing technical difficulties and are working to restore service.\\\\n If you need to reach us, contact your Farmers agent or call\",\\\n          \"footer\": \"1-800-511-0879\"\\\n        \\};\\\n        break;\\\n      case \"evening_outage\":\\\n        maintenance = \\{\\\n          \"title\": \"\",\\\n          \"message\": \"We are experiencing technical difficulties and are working to restore service.\\\\n If you need to reach us, contact your Farmers agent or call\",\\\n          \"footer\": \"1-888-327-6335\"\\\n        \\};\\\n        break;\\\n      case \"daytime_maintenance\":\\\n        maintenance = \\{\\\n          \"title\": \"\",\\\n          \"message\": \"Our mobile app is currently unavailable due to scheduled system maintenance. If you need to reach us, contact your Farmers agent or call\",\\\n          \"footer\": \"1-800-511-0879\"\\\n        \\};\\\n        break;\\\n      case \"evening_maintenance\":\\\n        maintenance = \\{\\\n          \"title\": \"\",\\\n          \"message\": \"Our mobile app is currently unavailable due to scheduled system maintenance. If you need to reach us, contact your Farmers agent or call\",\\\n          \"footer\": \"1-888-327-6335\"\\\n        \\};\\\n        break;\\\n    \\}\\\n    // override msg in body\\\n    if (maintenance) \\{\\\n      configDict.maintenance = maintenance;\\\n    \\}\\\n    configDict.holidayHour = [\"Thanksgiving Day: Closed\",\"Day After Thanksgiving: 7am-8pm CST\",\"Christmas Eve: 8am-5pm CST\",\"Christmas Eve: Closed (FL Only)\",\"Christmas Day: Closed\",\"New Year's Day: Closed\"];\\\n    // ---- Claims ----\\\n    var isClaimsAvailable = configDict.isClaimsAvailable;\\\n    if (isClaimsAvailable) \\{\\\n      var claims = \\{\\\n        \"reportClaimURL\": \"https://www.farmers.com/eFNOL/eFNOL_Login?SO=01\",\\\n        \"viewClaimsStatusURL\": \"https://www.farmers.com/eFNOL/claimsstatusportal_login#/prelogin?SO=01\"\\\n      \\};\\\n      configDict.claims = claims;\\\n    \\}\\\n    configDict.isClaimsAvailable = (isClaimsAvailable === 'true');\\\n    var appUpdatePolicy = '';\\\n    if (checkOptional(queryJSON.appVersion, queryJSON.osType)) \\{\\\n      appUpdatePolicy = 'OPTIONAL';\\\n    \\} else if (checkNone(queryJSON.appVersion, queryJSON.osType)) \\{\\\n      appUpdatePolicy = 'NONE';\\\n    \\} else \\{\\\n      appUpdatePolicy = 'MANDATORY';\\\n    \\}\\\n    configDict.appUpdatePolicy = appUpdatePolicy;\\\n    configDict.appStoreUrl = fetchAppStoreURL(appStoreUrls, queryJSON.osType);\\\n    configDict.isClassicFeedbackUI = false;\\\n    configDict.appStoreAppVersion = fetchAppStoreURL(appStoreVersion, queryJSON.osType);\\\n    response.body = configDict;\\\n    modules.logger.info(\" 5. - Response : \"   JSON.stringify(response));\\\n    response.complete(200);\\\n  \\});\\\n\\}\\\n\\\nfunction defaultResponse(params) \\{\\\n  var res = \\{\\\n    \"maintenanceType\": \"none\",\\\n    \"appVersion\": \"default\",\\\n    \"osType\": \"default\",\\\n    \"isClaimsAvailable\": true,\\\n    \"isHonkAvailable\": true,\\\n    \"isBillingAvailable\": true,\\\n    \"holidayHour\": [\"Thanksgiving Day: Closed\",\"Day After Thanksgiving: 7am-8pm CST\",\"Christmas Eve: 8am-5pm CST\",\"Christmas Eve: Closed (FL Only)\",\"Christmas Day: Closed\",\"New Year's Day: Closed\"]\\\n  \\};\\\n  var query = params.query;\\\n  var queryJSON = JSON.parse(query);\\\n  if (queryJSON.maintenanceType) \\{\\\n    res.maintenanceType = queryJSON.maintenanceType;\\\n  \\}\\\n  if (queryJSON.appVersion) \\{\\\n    res.appVersion = queryJSON.appVersion;\\\n  \\}\\\n  if (queryJSON.osType) \\{\\\n    res.osType = queryJSON.osType;\\\n  \\}\\\n  modules.logger.info(\"------------------------------App Configuration post service: after\"   JSON.stringify(res));\\\n  return res;\\\n\\}\\\n\\\nfunction fetchAppStoreURL(appStoreUrls, osType) \\{\\\n  if (osType.toLowerCase().indexOf('ios') >= 0) \\{\\\n    return appStoreUrls[0].iOS;\\\n  \\}\\\n  if (osType.toLowerCase().indexOf('android') >= 0) \\{\\\n    return appStoreUrls[1].android;\\\n  \\}\\\n\\}\\\n\\\nfunction checkNone(appVersion, osType) \\{\\\n  var iOSLatestVersions = [\"18.9\",\"18.10\",\"18.10.1\",\"18.11\",\"18.12\",\"19.01\"];\\\n  var androidLatestVersions = [\"18.9\",\"18.10\",\"18.11\",\"18.12\",\"19.01\"];\\\n  var isNone = false;\\\n  if (osType.toLowerCase().indexOf('ios') >= 0) \\{\\\n    for (var iOSVersion in iOSLatestVersions) \\{\\\n      if (iOSLatestVersions[iOSVersion].toLowerCase() === appVersion.toLowerCase()) \\{\\\n        isNone = true;\\\n        break;\\\n      \\}\\\n    \\}\\\n  \\} else if (osType.toLowerCase().indexOf('android') >= 0) \\{\\\n    for (var androidVersion in androidLatestVersions) \\{\\\n      if (androidLatestVersions[androidVersion].toLowerCase() === appVersion.toLowerCase()) \\{\\\n        isNone = true;\\\n        break;\\\n      \\}\\\n    \\}\\\n  \\}\\\n  return isNone;\\\n\\}\\\n\\\nfunction checkOptional(appVersion, osType) \\{\\\n  var iOSValidVersions = [];\\\n  var androidValidVersions = [];\\\n  var isOptional = false;\\\n  if (osType.toLowerCase().indexOf('ios') >= 0) \\{\\\n    for (var iOSVersion in iOSValidVersions) \\{\\\n      if (iOSValidVersions[iOSVersion].toLowerCase() === appVersion.toLowerCase()) \\{\\\n        isOptional = true;\\\n        break;\\\n      \\}\\\n    \\}\\\n  \\} else if (osType.toLowerCase().indexOf('android') >= 0) \\{\\\n    for (var androidVersion in androidValidVersions) \\{\\\n      if (androidValidVersions[androidVersion].toLowerCase() === appVersion.toLowerCase()) \\{\\\n        isOptional = true;\\\n        break;\\\n      \\}\\\n    \\}\\\n  \\}\\\n  return isOptional;\\\n\\}}"]}